name: Release on merge to main

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write   # create tags & releases
  actions: read

jobs:
  release:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Build (skip tests for speed)
        run: mvn -B -ntp -DskipTests clean package

      - name: Find built jar
        id: jar
        run: |
          file=$(ls -1 target/*.jar | grep -v -E 'sources|javadoc' | head -n1)
          echo "file=$file" >> "$GITHUB_OUTPUT"

      - name: Read version from pom.xml
        id: ver
        run: |
          v=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.1:exec)
          echo "version=$v" >> "$GITHUB_OUTPUT"
          echo "tag=v${v}" >> "$GITHUB_OUTPUT"
          echo "name=DiscordLogger v${v}" >> "$GITHUB_OUTPUT"

      - name: Build changelog for this tag
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: .github/release-changelog-builder-config.json
          toTag: ${{ steps.ver.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag (or fallback if tag exists)
        id: tag
        run: |
          TAG="${{ steps.ver.outputs.tag }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            # Fallback: unique run-suffixed tag to avoid collision
            TAG="${TAG}-r${GITHUB_RUN_NUMBER}"
            echo "Existing tag found, using fallback: $TAG"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "${{ steps.ver.outputs.name }}"
          git push origin "$TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.ver.outputs.name }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: ${{ steps.jar.outputs.file }}
